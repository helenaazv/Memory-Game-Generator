{"ast":null,"code":"var _jsxFileName = \"/Users/ligiahelena/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc'; // Replace with your key\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      setStartTime(null);\n    }\n  }, [matched, cards]);\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`https://api.unsplash.com/search/photos?query=${query}&per_page=10&client_id=${UNSPLASH_ACCESS_KEY}`);\n      const data = await res.json();\n      const images = data.results.map(img => ({\n        id: uuidv4(),\n        src: img.urls.small\n      }));\n      const duplicated = images.flatMap(img => [{\n        ...img,\n        uniqueId: uuidv4()\n      }, {\n        ...img,\n        uniqueId: uuidv4()\n      }]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClick = card => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1);\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type a topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchImages,\n        disabled: loading || !query,\n        children: loading ? 'Loading...' : 'Generate Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem',\n        justifyContent: 'center',\n        marginBottom: '1rem',\n        flexWrap: 'wrap'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCards([]);\n          setQuery('');\n          setGameStarted(false);\n          setMatched([]);\n          setFlipped([]);\n          setElapsedTime(0);\n          setFlipCount(0);\n          setStartTime(null);\n        },\n        className: \"new-game-button\",\n        children: \"Generate New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\uD83C\\uDFC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 38\n        }, this), \" Score: \", matched.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 38\n        }, this), \" Flips: \", flipCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\u23F1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 38\n        }, this), \" Timer: \", formatTime(elapsedTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: cards.map(card => {\n        const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => handleClick(card),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card-inner ${isFlipped ? 'flipped' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-front\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/card-back.png\",\n                alt: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-back\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: card.src,\n                alt: \"Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, card.uniqueId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), matched.length === cards.length / 2 && cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"win-message\",\n      children: [\"\\uD83C\\uDF89 You matched all pairs in \", formatTime(elapsedTime), \" with \", flipCount, \" flips!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1svpqF1g80Q72WOhI4/9J3GoPaE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","query","setQuery","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","loading","setLoading","gameStarted","setGameStarted","UNSPLASH_ACCESS_KEY","interval","setInterval","Math","floor","Date","now","clearInterval","length","fetchImages","res","fetch","data","json","images","results","map","img","id","src","urls","small","duplicated","flatMap","uniqueId","shuffled","sort","random","err","console","error","handleClick","card","find","f","includes","newFlipped","prev","setTimeout","formatTime","seconds","mins","toString","padStart","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","display","gap","justifyContent","marginBottom","flexWrap","isFlipped","alt","_c","$RefreshReg$"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc'; // Replace with your key\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      setStartTime(null);\n    }\n  }, [matched, cards]);\n\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(\n        `https://api.unsplash.com/search/photos?query=${query}&per_page=10&client_id=${UNSPLASH_ACCESS_KEY}`\n      );\n      const data = await res.json();\n      const images = data.results.map((img) => ({\n        id: uuidv4(),\n        src: img.urls.small,\n      }));\n\n      const duplicated = images.flatMap((img) => [\n        { ...img, uniqueId: uuidv4() },\n        { ...img, uniqueId: uuidv4() },\n      ]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClick = (card) => {\n    if (disabled || flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount((prev) => prev + 1);\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Memory Game Generator</h1>\n\n      {!gameStarted ? (\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Type a topic\"\n          />\n          <button onClick={fetchImages} disabled={loading || !query}>\n            {loading ? 'Loading...' : 'Generate Game'}\n          </button>\n        </div>\n      ) : (\n        <div style={{ display: 'flex', gap: '1rem', justifyContent: 'center', marginBottom: '1rem', flexWrap: 'wrap' }}>\n          <button onClick={() => {\n            setCards([]);\n            setQuery('');\n            setGameStarted(false);\n            setMatched([]);\n            setFlipped([]);\n            setElapsedTime(0);\n            setFlipCount(0);\n            setStartTime(null);\n          }} className=\"new-game-button\">\n            Generate New Game\n          </button>\n        </div>\n      )}\n\n      {cards.length > 0 && (\n        <div className=\"stats-bar\">\n          <div className=\"stat-item\"><span className=\"stat-emoji\">🏅</span> Score: {matched.length}</div>\n          <div className=\"stat-item\"><span className=\"stat-emoji\">🔄</span> Flips: {flipCount}</div>\n          <div className=\"stat-item\"><span className=\"stat-emoji\">⏱️</span> Timer: {formatTime(elapsedTime)}</div>\n        </div>\n      )}\n\n      <div className=\"grid\">\n        {cards.map((card) => {\n          const isFlipped = flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n          return (\n            <div key={card.uniqueId} className=\"card\" onClick={() => handleClick(card)}>\n              <div className={`card-inner ${isFlipped ? 'flipped' : ''}`}>\n                <div className=\"card-front\">\n                  <img src=\"/card-back.png\" alt=\"Back\" />\n                </div>\n                <div className=\"card-back\">\n                  <img src={card.src} alt=\"Card\" />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {matched.length === cards.length / 2 && cards.length > 0 && (\n        <div className=\"win-message\">\n          🎉 You matched all pairs in {formatTime(elapsedTime)} with {flipCount} flips!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}