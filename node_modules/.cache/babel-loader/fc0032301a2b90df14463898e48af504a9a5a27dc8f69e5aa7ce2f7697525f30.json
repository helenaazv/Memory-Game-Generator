{"ast":null,"code":"var _jsxFileName = \"/Users/ligiahelena/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport confetti from 'canvas-confetti';\nimport './App.css';\nimport Card from './components/Card';\nimport StatsBar from './components/StatsBar';\nimport GameOverScreen from './components/GameOverScreen';\nimport SearchBar from './components/SearchBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime') ? parseInt(localStorage.getItem('bestTime')) : null;\n  });\n  const [showGameOverScreen, setShowGameOverScreen] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      confetti({\n        particleCount: 150,\n        spread: 80,\n        origin: {\n          y: 0.6\n        }\n      });\n      setStartTime(null);\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n      const timeout = setTimeout(() => {\n        setQuery('');\n        setShowGameOverScreen(true);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/images?query=${encodeURIComponent(query)}`);\n      const data = await res.json();\n      const images = data.map(img => ({\n        id: uuidv4(),\n        src: img.url\n      }));\n      const duplicated = images.flatMap(img => [{\n        ...img,\n        uniqueId: uuidv4()\n      }, {\n        ...img,\n        uniqueId: uuidv4()\n      }]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n      setShowGameOverScreen(false);\n    } catch (err) {\n      console.error('Error fetching images from backend:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClick = card => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1);\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n    setShowGameOverScreen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), !gameStarted || showGameOverScreen ? /*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      setQuery: setQuery,\n      fetchImages: fetchImages,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"new-game-button\",\n        children: \"Generate New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), showGameOverScreen ? /*#__PURE__*/_jsxDEV(GameOverScreen, {\n      elapsedTime: elapsedTime,\n      flipCount: flipCount,\n      bestTime: bestTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cards.length > 0 && /*#__PURE__*/_jsxDEV(StatsBar, {\n        matched: matched,\n        flipCount: flipCount,\n        elapsedTime: elapsedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: cards.map(card => {\n          const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n          return /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            handleClick: handleClick,\n            isFlipped: isFlipped\n          }, card.uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zxkLHYeBN+OSfuzi2Uc3pEYge+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","confetti","Card","StatsBar","GameOverScreen","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","loading","setLoading","gameStarted","setGameStarted","bestTime","setBestTime","localStorage","getItem","parseInt","showGameOverScreen","setShowGameOverScreen","interval","setInterval","Math","floor","Date","now","clearInterval","length","particleCount","spread","origin","y","setItem","toString","timeout","setTimeout","clearTimeout","fetchImages","res","fetch","encodeURIComponent","data","json","images","map","img","id","src","url","duplicated","flatMap","uniqueId","shuffled","sort","random","err","console","error","handleClick","card","find","f","includes","newFlipped","prev","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","marginBottom","onClick","isFlipped","_c","$RefreshReg$"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport confetti from 'canvas-confetti';\nimport './App.css';\n\nimport Card from './components/Card';\nimport StatsBar from './components/StatsBar';\nimport GameOverScreen from './components/GameOverScreen';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime')\n      ? parseInt(localStorage.getItem('bestTime'))\n      : null;\n  });\n  const [showGameOverScreen, setShowGameOverScreen] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      confetti({\n        particleCount: 150,\n        spread: 80,\n        origin: { y: 0.6 },\n      });\n      setStartTime(null);\n\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n\n      const timeout = setTimeout(() => {\n        setQuery('');\n        setShowGameOverScreen(true);\n      }, 2000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/images?query=${encodeURIComponent(query)}`);\n      const data = await res.json();\n\n      const images = data.map((img) => ({\n        id: uuidv4(),\n        src: img.url,\n      }));\n\n      const duplicated = images.flatMap((img) => [\n        { ...img, uniqueId: uuidv4() },\n        { ...img, uniqueId: uuidv4() },\n      ]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n      setShowGameOverScreen(false);\n    } catch (err) {\n      console.error('Error fetching images from backend:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const handleClick = (card) => {\n    if (disabled || flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount((prev) => prev + 1);\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n    setShowGameOverScreen(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Memory Game Generator</h1>\n\n      {!gameStarted || showGameOverScreen ? (\n        <SearchBar query={query} setQuery={setQuery} fetchImages={fetchImages} loading={loading} />\n      ) : (\n        <div className=\"controls\" style={{ display: 'flex', justifyContent: 'center', marginBottom: '1rem' }}>\n          <button onClick={resetGame} className=\"new-game-button\">\n            Generate New Game\n          </button>\n        </div>\n      )}\n\n      {showGameOverScreen ? (\n        <GameOverScreen elapsedTime={elapsedTime} flipCount={flipCount} bestTime={bestTime} />\n      ) : (\n        <>\n          {cards.length > 0 && (\n            <StatsBar matched={matched} flipCount={flipCount} elapsedTime={elapsedTime} />\n          )}\n\n          <div className=\"grid\">\n            {cards.map((card) => {\n              const isFlipped = flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n              return (\n                <Card key={card.uniqueId} card={card} handleClick={handleClick} isFlipped={isFlipped} />\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}