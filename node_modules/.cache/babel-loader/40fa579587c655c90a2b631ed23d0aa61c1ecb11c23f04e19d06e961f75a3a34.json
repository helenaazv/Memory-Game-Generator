{"ast":null,"code":"var _jsxFileName = \"/Users/ligiahelena/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0); // 👈 Flip count per pair\n\n  // ⏳ Timer logic\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n  useEffect(() => {\n    if (matched.length === files.length && files.length > 0) {\n      setStartTime(null); // stop timer when all matched\n    }\n  }, [matched, files]);\n  const handleFiles = e => {\n    const uploaded = Array.from(e.target.files).map(file => ({\n      id: uuidv4(),\n      src: URL.createObjectURL(file)\n    }));\n    setFiles(uploaded);\n  };\n  const startGame = () => {\n    const duplicated = files.flatMap(file => [{\n      ...file,\n      uniqueId: uuidv4()\n    }, {\n      ...file,\n      uniqueId: uuidv4()\n    }]);\n    const shuffled = duplicated.sort(() => Math.random() - 0.5);\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setElapsedTime(0);\n    setFlipCount(0); // 👈 Reset flip count\n    setStartTime(Date.now());\n  };\n  const handleClick = card => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1); // 👈 Increment flip count for each pair\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDE0 Memory Game with Your Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      disabled: files.length === 0,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\uD83C\\uDFC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Score: \", matched.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Flips: \", flipCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\u23F1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Timer: \", formatTime(elapsedTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: cards.map(card => {\n        const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => handleClick(card),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card-inner ${isFlipped ? 'flipped' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-front\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/card-back.png\",\n                alt: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-back\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: card.src,\n                alt: \"Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, card.uniqueId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), matched.length === files.length && files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"win-message\",\n      children: [\"\\uD83C\\uDF89 You matched all pairs in \", formatTime(elapsedTime), \" with \", flipCount, \" flips!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C8F3wcVBvrYDe8bSbG2KRxKz8No=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","files","setFiles","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","interval","setInterval","Math","floor","Date","now","clearInterval","length","handleFiles","e","uploaded","Array","from","target","map","file","id","src","URL","createObjectURL","startGame","duplicated","flatMap","uniqueId","shuffled","sort","random","handleClick","card","find","f","includes","newFlipped","prev","setTimeout","formatTime","seconds","mins","toString","padStart","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","onClick","isFlipped","alt","_c","$RefreshReg$"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n  const [files, setFiles] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0); // 👈 Flip count per pair\n\n  // ⏳ Timer logic\n  useEffect(() => {\n    let interval;\n\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === files.length && files.length > 0) {\n      setStartTime(null); // stop timer when all matched\n    }\n  }, [matched, files]);\n\n  const handleFiles = (e) => {\n    const uploaded = Array.from(e.target.files).map(file => ({\n      id: uuidv4(),\n      src: URL.createObjectURL(file)\n    }));\n    setFiles(uploaded);\n  };\n\n  const startGame = () => {\n    const duplicated = files.flatMap(file => [\n      { ...file, uniqueId: uuidv4() },\n      { ...file, uniqueId: uuidv4() }\n    ]);\n    const shuffled = duplicated.sort(() => Math.random() - 0.5);\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setElapsedTime(0);\n    setFlipCount(0); // 👈 Reset flip count\n    setStartTime(Date.now());\n  };\n\n  const handleClick = (card) => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1); // 👈 Increment flip count for each pair\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>🧠 Memory Game with Your Photos</h1>\n\n      <input type=\"file\" accept=\"image/*\" multiple onChange={handleFiles} />\n      <button onClick={startGame} disabled={files.length === 0}>Start Game</button>\n\n      {/* 🧾 Stats Bar */}\n      <div className=\"stats-bar\">\n        <div className=\"stat-item\">\n          <span className=\"stat-emoji\">🏅</span>\n          <span>Score: {matched.length}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-emoji\">🔄</span>\n          <span>Flips: {flipCount}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-emoji\">⏱️</span>\n          <span>Timer: {formatTime(elapsedTime)}</span>\n        </div>\n      </div>\n\n      {/* 🧩 Game Grid */}\n      <div className=\"grid\">\n        {cards.map(card => {\n          const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n          return (\n            <div key={card.uniqueId} className=\"card\" onClick={() => handleClick(card)}>\n              <div className={`card-inner ${isFlipped ? 'flipped' : ''}`}>\n                <div className=\"card-front\">\n                  <img src=\"/card-back.png\" alt=\"Back\" />\n                </div>\n                <div className=\"card-back\">\n                  <img src={card.src} alt=\"Card\" />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {matched.length === files.length && files.length > 0 && (\n        <div className=\"win-message\">\n          🎉 You matched all pairs in {formatTime(elapsedTime)} with {flipCount} flips!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}