{"ast":null,"code":"var _jsxFileName = \"/Users/ligiahelena/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport confetti from 'canvas-confetti';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime') ? parseInt(localStorage.getItem('bestTime')) : null;\n  });\n  const [showGameOverScreen, setShowGameOverScreen] = useState(false);\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc'; // Replace with your key\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      confetti({\n        particleCount: 150,\n        spread: 80,\n        origin: {\n          y: 0.6\n        }\n      });\n      setStartTime(null);\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n      const timeout = setTimeout(() => {\n        setQuery(''); // Clear the input bar\n        setShowGameOverScreen(true);\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`https://api.unsplash.com/search/photos?query=${query}&per_page=10&client_id=${UNSPLASH_ACCESS_KEY}`);\n      const data = await res.json();\n      const images = data.results.map(img => ({\n        id: uuidv4(),\n        src: img.urls.small\n      }));\n      const duplicated = images.flatMap(img => [{\n        ...img,\n        uniqueId: uuidv4()\n      }, {\n        ...img,\n        uniqueId: uuidv4()\n      }]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n      setShowGameOverScreen(false);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClick = card => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1);\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n    setShowGameOverScreen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), !gameStarted || showGameOverScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type a topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchImages,\n        disabled: loading || !query,\n        children: loading ? 'Loading...' : 'Generate Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem',\n        justifyContent: 'center',\n        marginBottom: '1rem',\n        flexWrap: 'wrap'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"new-game-button\",\n        children: \"Generate New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), showGameOverScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time to complete: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formatTime(elapsedTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of flips: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: flipCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Best time: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: bestTime !== null ? formatTime(bestTime) : \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\uD83C\\uDFC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 42\n          }, this), \" Score: \", matched.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 42\n          }, this), \" Flips: \", flipCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\u23F1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 42\n          }, this), \" Timer: \", formatTime(elapsedTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: cards.map(card => {\n          const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            onClick: () => handleClick(card),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `card-inner ${isFlipped ? 'flipped' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-front\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/card-back.png\",\n                  alt: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-back\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: card.src,\n                  alt: \"Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)\n          }, card.uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zxkLHYeBN+OSfuzi2Uc3pEYge+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","loading","setLoading","gameStarted","setGameStarted","bestTime","setBestTime","localStorage","getItem","parseInt","showGameOverScreen","setShowGameOverScreen","UNSPLASH_ACCESS_KEY","interval","setInterval","Math","floor","Date","now","clearInterval","length","particleCount","spread","origin","y","setItem","toString","timeout","setTimeout","clearTimeout","fetchImages","res","fetch","data","json","images","results","map","img","id","src","urls","small","duplicated","flatMap","uniqueId","shuffled","sort","random","err","console","error","handleClick","card","find","f","includes","newFlipped","prev","formatTime","seconds","mins","padStart","secs","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","display","gap","justifyContent","marginBottom","flexWrap","isFlipped","alt","_c","$RefreshReg$"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport confetti from 'canvas-confetti';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime')\n      ? parseInt(localStorage.getItem('bestTime'))\n      : null;\n  });\n  const [showGameOverScreen, setShowGameOverScreen] = useState(false);\n\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc'; // Replace with your key\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      confetti({\n        particleCount: 150,\n        spread: 80,\n        origin: { y: 0.6 },\n      });\n      setStartTime(null);\n\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n\n      const timeout = setTimeout(() => {\n        setQuery(''); // Clear the input bar\n        setShowGameOverScreen(true);\n      }, 2000);\n\n\n      return () => clearTimeout(timeout);\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(\n        `https://api.unsplash.com/search/photos?query=${query}&per_page=10&client_id=${UNSPLASH_ACCESS_KEY}`\n      );\n      const data = await res.json();\n      const images = data.results.map((img) => ({\n        id: uuidv4(),\n        src: img.urls.small,\n      }));\n\n      const duplicated = images.flatMap((img) => [\n        { ...img, uniqueId: uuidv4() },\n        { ...img, uniqueId: uuidv4() },\n      ]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n      setShowGameOverScreen(false);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClick = (card) => {\n    if (disabled || flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount((prev) => prev + 1);\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n    setShowGameOverScreen(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Memory Game Generator</h1>\n\n      {!gameStarted || showGameOverScreen ? (\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Type a topic\"\n          />\n          <button onClick={fetchImages} disabled={loading || !query}>\n            {loading ? 'Loading...' : 'Generate Game'}\n          </button>\n        </div>\n      ) : (\n        <div style={{ display: 'flex', gap: '1rem', justifyContent: 'center', marginBottom: '1rem', flexWrap: 'wrap' }}>\n          <button onClick={resetGame} className=\"new-game-button\">\n            Generate New Game\n          </button>\n        </div>\n      )}\n\n      {showGameOverScreen ? (\n        <div className=\"game-over popup\">\n          <h2>🎉 You Won!</h2>\n          <p>Time to complete: <strong>{formatTime(elapsedTime)}</strong></p>\n          <p>Number of flips: <strong>{flipCount}</strong></p>\n          <p>Best time: <strong>{bestTime !== null ? formatTime(bestTime) : \"N/A\"}</strong></p>\n        </div>\n      ) : (\n        <>\n          {cards.length > 0 && (\n            <div className=\"stats-bar\">\n              <div className=\"stat-item\"><span className=\"stat-emoji\">🏅</span> Score: {matched.length}</div>\n              <div className=\"stat-item\"><span className=\"stat-emoji\">🔄</span> Flips: {flipCount}</div>\n              <div className=\"stat-item\"><span className=\"stat-emoji\">⏱️</span> Timer: {formatTime(elapsedTime)}</div>\n            </div>\n          )}\n\n          <div className=\"grid\">\n            {cards.map((card) => {\n              const isFlipped = flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n              return (\n                <div key={card.uniqueId} className=\"card\" onClick={() => handleClick(card)}>\n                  <div className={`card-inner ${isFlipped ? 'flipped' : ''}`}>\n                    <div className=\"card-front\">\n                      <img src=\"/card-back.png\" alt=\"Back\" />\n                    </div>\n                    <div className=\"card-back\">\n                      <img src={card.src} alt=\"Card\" />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}