{"ast":null,"code":"import _objectSpread from\"/Users/ligiahelena/Desktop/memory-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{v4 as uuidv4}from'uuid';import confetti from'canvas-confetti';import'./App.css';import Card from'./components/Card';import StatsBar from'./components/StatsBar';import GameOverScreen from'./components/GameOverScreen';import SearchBar from'./components/SearchBar';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[query,setQuery]=useState('');const[cards,setCards]=useState([]);const[flipped,setFlipped]=useState([]);const[matched,setMatched]=useState([]);const[disabled,setDisabled]=useState(false);const[startTime,setStartTime]=useState(null);const[elapsedTime,setElapsedTime]=useState(0);const[flipCount,setFlipCount]=useState(0);const[loading,setLoading]=useState(false);const[gameStarted,setGameStarted]=useState(false);const[bestTime,setBestTime]=useState(()=>{return localStorage.getItem('bestTime')?parseInt(localStorage.getItem('bestTime')):null;});const[showGameOverScreen,setShowGameOverScreen]=useState(false);useEffect(()=>{let interval;if(startTime){interval=setInterval(()=>{setElapsedTime(Math.floor((Date.now()-startTime)/1000));},1000);}return()=>clearInterval(interval);},[startTime]);useEffect(()=>{if(matched.length===cards.length/2&&cards.length>0){confetti({particleCount:150,spread:80,origin:{y:0.6}});setStartTime(null);if(bestTime===null||elapsedTime<bestTime){setBestTime(elapsedTime);localStorage.setItem('bestTime',elapsedTime.toString());}const timeout=setTimeout(()=>{setQuery('');setShowGameOverScreen(true);},2000);return()=>clearTimeout(timeout);}},[matched,cards,elapsedTime,bestTime]);const fetchImages=async()=>{if(!query)return;setLoading(true);try{const res=await fetch(\"/api/images?query=\".concat(encodeURIComponent(query)));const data=await res.json();const images=data.map(img=>({id:uuidv4(),src:img.url}));const duplicated=images.flatMap(img=>[_objectSpread(_objectSpread({},img),{},{uniqueId:uuidv4()}),_objectSpread(_objectSpread({},img),{},{uniqueId:uuidv4()})]);const shuffled=duplicated.sort(()=>Math.random()-0.5);setCards(shuffled);setFlipped([]);setMatched([]);setElapsedTime(0);setFlipCount(0);setStartTime(Date.now());setGameStarted(true);setShowGameOverScreen(false);}catch(err){console.error('Error fetching images from backend:',err);}finally{setLoading(false);}};const handleClick=card=>{if(disabled||flipped.find(f=>f.uniqueId===card.uniqueId)||matched.includes(card.src))return;const newFlipped=[...flipped,card];setFlipped(newFlipped);if(newFlipped.length===2){setDisabled(true);setFlipCount(prev=>prev+1);if(newFlipped[0].src===newFlipped[1].src){setMatched([...matched,card.src]);setTimeout(()=>{setFlipped([]);setDisabled(false);},700);}else{setTimeout(()=>{setFlipped([]);setDisabled(false);},1000);}}};const resetGame=()=>{setCards([]);setQuery('');setGameStarted(false);setMatched([]);setFlipped([]);setElapsedTime(0);setFlipCount(0);setStartTime(null);setShowGameOverScreen(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Memory Game Generator\"}),!gameStarted||showGameOverScreen?/*#__PURE__*/_jsx(SearchBar,{query:query,setQuery:setQuery,fetchImages:fetchImages,loading:loading}):/*#__PURE__*/_jsx(\"div\",{className:\"controls\",style:{display:'flex',justifyContent:'center',marginBottom:'1rem'},children:/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,className:\"new-game-button\",children:\"Generate New Game\"})}),showGameOverScreen?/*#__PURE__*/_jsx(GameOverScreen,{elapsedTime:elapsedTime,flipCount:flipCount,bestTime:bestTime}):/*#__PURE__*/_jsxs(_Fragment,{children:[cards.length>0&&/*#__PURE__*/_jsx(StatsBar,{matched:matched,flipCount:flipCount,elapsedTime:elapsedTime}),/*#__PURE__*/_jsx(\"div\",{className:\"grid\",children:cards.map(card=>{const isFlipped=flipped.find(f=>f.uniqueId===card.uniqueId)||matched.includes(card.src);return/*#__PURE__*/_jsx(Card,{card:card,handleClick:handleClick,isFlipped:isFlipped},card.uniqueId);})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","confetti","Card","StatsBar","GameOverScreen","SearchBar","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","query","setQuery","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","loading","setLoading","gameStarted","setGameStarted","bestTime","setBestTime","localStorage","getItem","parseInt","showGameOverScreen","setShowGameOverScreen","interval","setInterval","Math","floor","Date","now","clearInterval","length","particleCount","spread","origin","y","setItem","toString","timeout","setTimeout","clearTimeout","fetchImages","res","fetch","concat","encodeURIComponent","data","json","images","map","img","id","src","url","duplicated","flatMap","_objectSpread","uniqueId","shuffled","sort","random","err","console","error","handleClick","card","find","f","includes","newFlipped","prev","resetGame","className","children","style","display","justifyContent","marginBottom","onClick","isFlipped"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport confetti from 'canvas-confetti';\nimport './App.css';\n\nimport Card from './components/Card';\nimport StatsBar from './components/StatsBar';\nimport GameOverScreen from './components/GameOverScreen';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime')\n      ? parseInt(localStorage.getItem('bestTime'))\n      : null;\n  });\n  const [showGameOverScreen, setShowGameOverScreen] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      confetti({\n        particleCount: 150,\n        spread: 80,\n        origin: { y: 0.6 },\n      });\n      setStartTime(null);\n\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n\n      const timeout = setTimeout(() => {\n        setQuery('');\n        setShowGameOverScreen(true);\n      }, 2000);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/images?query=${encodeURIComponent(query)}`);\n      const data = await res.json();\n\n      const images = data.map((img) => ({\n        id: uuidv4(),\n        src: img.url,\n      }));\n\n      const duplicated = images.flatMap((img) => [\n        { ...img, uniqueId: uuidv4() },\n        { ...img, uniqueId: uuidv4() },\n      ]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n      setShowGameOverScreen(false);\n    } catch (err) {\n      console.error('Error fetching images from backend:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const handleClick = (card) => {\n    if (disabled || flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount((prev) => prev + 1);\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n    setShowGameOverScreen(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Memory Game Generator</h1>\n\n      {!gameStarted || showGameOverScreen ? (\n        <SearchBar query={query} setQuery={setQuery} fetchImages={fetchImages} loading={loading} />\n      ) : (\n        <div className=\"controls\" style={{ display: 'flex', justifyContent: 'center', marginBottom: '1rem' }}>\n          <button onClick={resetGame} className=\"new-game-button\">\n            Generate New Game\n          </button>\n        </div>\n      )}\n\n      {showGameOverScreen ? (\n        <GameOverScreen elapsedTime={elapsedTime} flipCount={flipCount} bestTime={bestTime} />\n      ) : (\n        <>\n          {cards.length > 0 && (\n            <StatsBar matched={matched} flipCount={flipCount} elapsedTime={elapsedTime} />\n          )}\n\n          <div className=\"grid\">\n            {cards.map((card) => {\n              const isFlipped = flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n              return (\n                <Card key={card.uniqueId} card={card} handleClick={handleClick} isFlipped={isFlipped} />\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}