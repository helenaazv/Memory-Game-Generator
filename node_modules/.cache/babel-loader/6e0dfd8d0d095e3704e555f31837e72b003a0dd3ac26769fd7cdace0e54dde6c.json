{"ast":null,"code":"var _jsxFileName = \"/Users/ligiahelena/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime') ? parseInt(localStorage.getItem('bestTime')) : null;\n  });\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc'; // Replace with your key\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      setStartTime(null);\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`https://api.unsplash.com/search/photos?query=${query}&per_page=10&client_id=${UNSPLASH_ACCESS_KEY}`);\n      const data = await res.json();\n      const images = data.results.map(img => ({\n        id: uuidv4(),\n        src: img.urls.small\n      }));\n      const duplicated = images.flatMap(img => [{\n        ...img,\n        uniqueId: uuidv4()\n      }, {\n        ...img,\n        uniqueId: uuidv4()\n      }]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClick = card => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1);\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n  };\n  const hasWon = matched.length === cards.length / 2 && cards.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), !gameStarted || hasWon ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type a topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchImages,\n        disabled: loading || !query,\n        children: loading ? 'Loading...' : 'Generate Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem',\n        justifyContent: 'center',\n        marginBottom: '1rem',\n        flexWrap: 'wrap'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"new-game-button\",\n        children: \"Generate New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), hasWon ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 You Won!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time to complete: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formatTime(elapsedTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of flips: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: flipCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Best time: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: bestTime !== null ? formatTime(bestTime) : \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\uD83C\\uDFC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 42\n          }, this), \" Score: \", matched.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 42\n          }, this), \" Flips: \", flipCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\u23F1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 42\n          }, this), \" Timer: \", formatTime(elapsedTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: cards.map(card => {\n          const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            onClick: () => handleClick(card),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `card-inner ${isFlipped ? 'flipped' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-front\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/card-back.png\",\n                  alt: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-back\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: card.src,\n                  alt: \"Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)\n          }, card.uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rykcg+Tgkd9wX70IlmLIdkTi98M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","loading","setLoading","gameStarted","setGameStarted","bestTime","setBestTime","localStorage","getItem","parseInt","UNSPLASH_ACCESS_KEY","interval","setInterval","Math","floor","Date","now","clearInterval","length","setItem","toString","fetchImages","res","fetch","data","json","images","results","map","img","id","src","urls","small","duplicated","flatMap","uniqueId","shuffled","sort","random","err","console","error","handleClick","card","find","f","includes","newFlipped","prev","setTimeout","formatTime","seconds","mins","padStart","secs","resetGame","hasWon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","display","gap","justifyContent","marginBottom","flexWrap","isFlipped","alt","_c","$RefreshReg$"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [bestTime, setBestTime] = useState(() => {\n    return localStorage.getItem('bestTime')\n      ? parseInt(localStorage.getItem('bestTime'))\n      : null;\n  });\n\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc'; // Replace with your key\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      setStartTime(null);\n      if (bestTime === null || elapsedTime < bestTime) {\n        setBestTime(elapsedTime);\n        localStorage.setItem('bestTime', elapsedTime.toString());\n      }\n    }\n  }, [matched, cards, elapsedTime, bestTime]);\n\n  const fetchImages = async () => {\n    if (!query) return;\n    setLoading(true);\n    try {\n      const res = await fetch(\n        `https://api.unsplash.com/search/photos?query=${query}&per_page=10&client_id=${UNSPLASH_ACCESS_KEY}`\n      );\n      const data = await res.json();\n      const images = data.results.map((img) => ({\n        id: uuidv4(),\n        src: img.urls.small,\n      }));\n\n      const duplicated = images.flatMap((img) => [\n        { ...img, uniqueId: uuidv4() },\n        { ...img, uniqueId: uuidv4() },\n      ]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClick = (card) => {\n    if (disabled || flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount((prev) => prev + 1);\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  const resetGame = () => {\n    setCards([]);\n    setQuery('');\n    setGameStarted(false);\n    setMatched([]);\n    setFlipped([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(null);\n  };\n\n  const hasWon = matched.length === cards.length / 2 && cards.length > 0;\n\n  return (\n    <div className=\"app\">\n      <h1>Memory Game Generator</h1>\n\n      {!gameStarted || hasWon ? (\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Type a topic\"\n          />\n          <button onClick={fetchImages} disabled={loading || !query}>\n            {loading ? 'Loading...' : 'Generate Game'}\n          </button>\n        </div>\n      ) : (\n        <div style={{ display: 'flex', gap: '1rem', justifyContent: 'center', marginBottom: '1rem', flexWrap: 'wrap' }}>\n          <button onClick={resetGame} className=\"new-game-button\">\n            Generate New Game\n          </button>\n        </div>\n      )}\n\n      {hasWon ? (\n        <div className=\"game-over\">\n          <h2>🎉 You Won!</h2>\n          <p>Time to complete: <strong>{formatTime(elapsedTime)}</strong></p>\n          <p>Number of flips: <strong>{flipCount}</strong></p>\n          <p>Best time: <strong>{bestTime !== null ? formatTime(bestTime) : \"N/A\"}</strong></p>\n        </div>\n      ) : (\n        <>\n          {cards.length > 0 && (\n            <div className=\"stats-bar\">\n              <div className=\"stat-item\"><span className=\"stat-emoji\">🏅</span> Score: {matched.length}</div>\n              <div className=\"stat-item\"><span className=\"stat-emoji\">🔄</span> Flips: {flipCount}</div>\n              <div className=\"stat-item\"><span className=\"stat-emoji\">⏱️</span> Timer: {formatTime(elapsedTime)}</div>\n            </div>\n          )}\n\n          <div className=\"grid\">\n            {cards.map((card) => {\n              const isFlipped = flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n              return (\n                <div key={card.uniqueId} className=\"card\" onClick={() => handleClick(card)}>\n                  <div className={`card-inner ${isFlipped ? 'flipped' : ''}`}>\n                    <div className=\"card-front\">\n                      <img src=\"/card-back.png\" alt=\"Back\" />\n                    </div>\n                    <div className=\"card-back\">\n                      <img src={card.src} alt=\"Card\" />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}