{"ast":null,"code":"var _jsxFileName = \"/Users/ligiahelena/Desktop/memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [numPairs, setNumPairs] = useState(6);\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc';\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      setStartTime(null);\n    }\n  }, [matched, cards]);\n  const fetchImages = async () => {\n    if (!query || numPairs < 2 || numPairs > 50) {\n      setErrorMsg('Please enter a number between 2 and 50.');\n      return;\n    }\n    setErrorMsg('');\n    setLoading(true);\n    try {\n      const perPage = 30;\n      const pages = Math.ceil(numPairs / perPage);\n      let allImages = [];\n      for (let page = 1; page <= pages; page++) {\n        const res = await fetch(`https://api.unsplash.com/search/photos?query=${query}&per_page=${perPage}&page=${page}&client_id=${UNSPLASH_ACCESS_KEY}`);\n        const data = await res.json();\n        if (data.results) {\n          allImages = [...allImages, ...data.results];\n        }\n        if (allImages.length >= numPairs) break;\n      }\n      const uniqueImages = allImages.filter((img, index, self) => index === self.findIndex(i => i.urls.small === img.urls.small)).slice(0, numPairs).map(img => ({\n        id: uuidv4(),\n        src: img.urls.small\n      }));\n      const duplicated = uniqueImages.flatMap(img => [{\n        ...img,\n        uniqueId: uuidv4()\n      }, {\n        ...img,\n        uniqueId: uuidv4()\n      }]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetGameWithSameImages = () => {\n    const uniqueImages = cards.filter((card, index, self) => index === self.findIndex(c => c.src === card.src));\n    const duplicated = uniqueImages.flatMap(img => [{\n      ...img,\n      uniqueId: uuidv4()\n    }, {\n      ...img,\n      uniqueId: uuidv4()\n    }]);\n    const shuffled = duplicated.sort(() => Math.random() - 0.5);\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(Date.now());\n  };\n  const handleClick = card => {\n    if (disabled || flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src)) return;\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount(prev => prev + 1);\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Type a topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numPairs,\n        onChange: e => setNumPairs(Number(e.target.value)),\n        min: 2,\n        max: 50,\n        placeholder: \"Number of pairs (2\\u201350)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchImages,\n        disabled: loading || !query,\n        children: loading ? 'Loading...' : 'Generate Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem',\n        justifyContent: 'center',\n        marginBottom: '1rem',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCards([]);\n          setQuery('');\n          setGameStarted(false);\n          setMatched([]);\n          setFlipped([]);\n          setElapsedTime(0);\n          setFlipCount(0);\n          setStartTime(null);\n        },\n        className: \"new-game-button\",\n        children: \"Generate New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGameWithSameImages,\n        className: \"play-again-button\",\n        children: \"Play Again with Same Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\uD83C\\uDFC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), \" Score: \", matched.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), \" Flips: \", flipCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-emoji\",\n          children: \"\\u23F1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), \" Timer: \", formatTime(elapsedTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: cards.map(card => {\n        const isFlipped = flipped.find(f => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => handleClick(card),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card-inner ${isFlipped ? 'flipped' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-front\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/card-back.png\",\n                alt: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-back\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: card.src,\n                alt: \"Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, card.uniqueId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), matched.length === cards.length / 2 && cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"win-message\",\n      children: [\"\\uD83C\\uDF89 You matched all \", numPairs, \" pairs in \", formatTime(elapsedTime), \" with \", flipCount, \" flips!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CoGoufxm1ACJaTCVI2jrPMSCzi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","query","setQuery","numPairs","setNumPairs","cards","setCards","flipped","setFlipped","matched","setMatched","disabled","setDisabled","startTime","setStartTime","elapsedTime","setElapsedTime","flipCount","setFlipCount","loading","setLoading","gameStarted","setGameStarted","errorMsg","setErrorMsg","UNSPLASH_ACCESS_KEY","interval","setInterval","Math","floor","Date","now","clearInterval","length","fetchImages","perPage","pages","ceil","allImages","page","res","fetch","data","json","results","uniqueImages","filter","img","index","self","findIndex","i","urls","small","slice","map","id","src","duplicated","flatMap","uniqueId","shuffled","sort","random","err","console","error","resetGameWithSameImages","card","c","handleClick","find","f","includes","newFlipped","prev","setTimeout","formatTime","seconds","mins","toString","padStart","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","Number","min","max","style","color","onClick","display","gap","justifyContent","marginBottom","flexWrap","isFlipped","alt","_c","$RefreshReg$"],"sources":["/Users/ligiahelena/Desktop/memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [numPairs, setNumPairs] = useState(6);\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [flipCount, setFlipCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const UNSPLASH_ACCESS_KEY = 'eMQx1uzxyUWvXl2l8Gj9DlKWe6SNN5KsC8cQ2srcvkc';\n\n  useEffect(() => {\n    let interval;\n    if (startTime) {\n      interval = setInterval(() => {\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [startTime]);\n\n  useEffect(() => {\n    if (matched.length === cards.length / 2 && cards.length > 0) {\n      setStartTime(null);\n    }\n  }, [matched, cards]);\n\n  const fetchImages = async () => {\n    if (!query || numPairs < 2 || numPairs > 50) {\n      setErrorMsg('Please enter a number between 2 and 50.');\n      return;\n    }\n\n    setErrorMsg('');\n    setLoading(true);\n    try {\n      const perPage = 30;\n      const pages = Math.ceil(numPairs / perPage);\n      let allImages = [];\n\n      for (let page = 1; page <= pages; page++) {\n        const res = await fetch(\n          `https://api.unsplash.com/search/photos?query=${query}&per_page=${perPage}&page=${page}&client_id=${UNSPLASH_ACCESS_KEY}`\n        );\n        const data = await res.json();\n        if (data.results) {\n          allImages = [...allImages, ...data.results];\n        }\n        if (allImages.length >= numPairs) break;\n      }\n\n      const uniqueImages = allImages\n        .filter((img, index, self) =>\n          index === self.findIndex((i) => i.urls.small === img.urls.small)\n        )\n        .slice(0, numPairs)\n        .map((img) => ({\n          id: uuidv4(),\n          src: img.urls.small,\n        }));\n\n      const duplicated = uniqueImages.flatMap((img) => [\n        { ...img, uniqueId: uuidv4() },\n        { ...img, uniqueId: uuidv4() },\n      ]);\n      const shuffled = duplicated.sort(() => Math.random() - 0.5);\n\n      setCards(shuffled);\n      setFlipped([]);\n      setMatched([]);\n      setElapsedTime(0);\n      setFlipCount(0);\n      setStartTime(Date.now());\n      setGameStarted(true);\n    } catch (err) {\n      console.error('Error fetching images:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetGameWithSameImages = () => {\n    const uniqueImages = cards\n      .filter((card, index, self) =>\n        index === self.findIndex((c) => c.src === card.src)\n      );\n\n    const duplicated = uniqueImages.flatMap((img) => [\n      { ...img, uniqueId: uuidv4() },\n      { ...img, uniqueId: uuidv4() },\n    ]);\n    const shuffled = duplicated.sort(() => Math.random() - 0.5);\n    setCards(shuffled);\n    setFlipped([]);\n    setMatched([]);\n    setElapsedTime(0);\n    setFlipCount(0);\n    setStartTime(Date.now());\n  };\n\n  const handleClick = (card) => {\n    if (\n      disabled ||\n      flipped.find((f) => f.uniqueId === card.uniqueId) ||\n      matched.includes(card.src)\n    )\n      return;\n\n    const newFlipped = [...flipped, card];\n    setFlipped(newFlipped);\n\n    if (newFlipped.length === 2) {\n      setDisabled(true);\n      setFlipCount((prev) => prev + 1);\n\n      if (newFlipped[0].src === newFlipped[1].src) {\n        setMatched([...matched, card.src]);\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 700);\n      } else {\n        setTimeout(() => {\n          setFlipped([]);\n          setDisabled(false);\n        }, 1000);\n      }\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Memory Game Generator</h1>\n\n      {!gameStarted ? (\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Type a topic\"\n          />\n          <input\n            type=\"number\"\n            value={numPairs}\n            onChange={(e) => setNumPairs(Number(e.target.value))}\n            min={2}\n            max={50}\n            placeholder=\"Number of pairs (2–50)\"\n          />\n          {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\n          <button onClick={fetchImages} disabled={loading || !query}>\n            {loading ? 'Loading...' : 'Generate Game'}\n          </button>\n        </div>\n      ) : (\n        <div\n          style={{\n            display: 'flex',\n            gap: '1rem',\n            justifyContent: 'center',\n            marginBottom: '1rem',\n            flexWrap: 'wrap',\n          }}\n        >\n          <button\n            onClick={() => {\n              setCards([]);\n              setQuery('');\n              setGameStarted(false);\n              setMatched([]);\n              setFlipped([]);\n              setElapsedTime(0);\n              setFlipCount(0);\n              setStartTime(null);\n            }}\n            className=\"new-game-button\"\n          >\n            Generate New Game\n          </button>\n          <button onClick={resetGameWithSameImages} className=\"play-again-button\">\n            Play Again with Same Images\n          </button>\n        </div>\n      )}\n\n      {cards.length > 0 && (\n        <div className=\"stats-bar\">\n          <div className=\"stat-item\">\n            <span className=\"stat-emoji\">🏅</span> Score: {matched.length}\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-emoji\">🔄</span> Flips: {flipCount}\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-emoji\">⏱️</span> Timer: {formatTime(elapsedTime)}\n          </div>\n        </div>\n      )}\n\n      <div className=\"grid\">\n        {cards.map((card) => {\n          const isFlipped =\n            flipped.find((f) => f.uniqueId === card.uniqueId) || matched.includes(card.src);\n          return (\n            <div key={card.uniqueId} className=\"card\" onClick={() => handleClick(card)}>\n              <div className={`card-inner ${isFlipped ? 'flipped' : ''}`}>\n                <div className=\"card-front\">\n                  <img src=\"/card-back.png\" alt=\"Back\" />\n                </div>\n                <div className=\"card-back\">\n                  <img src={card.src} alt=\"Card\" />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {matched.length === cards.length / 2 && cards.length > 0 && (\n        <div className=\"win-message\">\n          🎉 You matched all {numPairs} pairs in {formatTime(elapsedTime)} with {flipCount} flips!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgC,mBAAmB,GAAG,6CAA6C;EAEzE/B,SAAS,CAAC,MAAM;IACd,IAAIgC,QAAQ;IACZ,IAAIb,SAAS,EAAE;MACba,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BX,cAAc,CAACY,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGlB,SAAS,IAAI,IAAI,CAAC,CAAC;MAC7D,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAMmB,aAAa,CAACN,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEfnB,SAAS,CAAC,MAAM;IACd,IAAIe,OAAO,CAACwB,MAAM,KAAK5B,KAAK,CAAC4B,MAAM,GAAG,CAAC,IAAI5B,KAAK,CAAC4B,MAAM,GAAG,CAAC,EAAE;MAC3DnB,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACL,OAAO,EAAEJ,KAAK,CAAC,CAAC;EAEpB,MAAM6B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACjC,KAAK,IAAIE,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,EAAE,EAAE;MAC3CqB,WAAW,CAAC,yCAAyC,CAAC;MACtD;IACF;IAEAA,WAAW,CAAC,EAAE,CAAC;IACfJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMe,OAAO,GAAG,EAAE;MAClB,MAAMC,KAAK,GAAGR,IAAI,CAACS,IAAI,CAAClC,QAAQ,GAAGgC,OAAO,CAAC;MAC3C,IAAIG,SAAS,GAAG,EAAE;MAElB,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAIH,KAAK,EAAEG,IAAI,EAAE,EAAE;QACxC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,gDAAgDxC,KAAK,aAAakC,OAAO,SAASI,IAAI,cAAcd,mBAAmB,EACzH,CAAC;QACD,MAAMiB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,IAAID,IAAI,CAACE,OAAO,EAAE;UAChBN,SAAS,GAAG,CAAC,GAAGA,SAAS,EAAE,GAAGI,IAAI,CAACE,OAAO,CAAC;QAC7C;QACA,IAAIN,SAAS,CAACL,MAAM,IAAI9B,QAAQ,EAAE;MACpC;MAEA,MAAM0C,YAAY,GAAGP,SAAS,CAC3BQ,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,KACvBD,KAAK,KAAKC,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAACC,KAAK,KAAKN,GAAG,CAACK,IAAI,CAACC,KAAK,CACjE,CAAC,CACAC,KAAK,CAAC,CAAC,EAAEnD,QAAQ,CAAC,CAClBoD,GAAG,CAAER,GAAG,KAAM;QACbS,EAAE,EAAE5D,MAAM,CAAC,CAAC;QACZ6D,GAAG,EAAEV,GAAG,CAACK,IAAI,CAACC;MAChB,CAAC,CAAC,CAAC;MAEL,MAAMK,UAAU,GAAGb,YAAY,CAACc,OAAO,CAAEZ,GAAG,IAAK,CAC/C;QAAE,GAAGA,GAAG;QAAEa,QAAQ,EAAEhE,MAAM,CAAC;MAAE,CAAC,EAC9B;QAAE,GAAGmD,GAAG;QAAEa,QAAQ,EAAEhE,MAAM,CAAC;MAAE,CAAC,CAC/B,CAAC;MACF,MAAMiE,QAAQ,GAAGH,UAAU,CAACI,IAAI,CAAC,MAAMlC,IAAI,CAACmC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MAE3DzD,QAAQ,CAACuD,QAAQ,CAAC;MAClBrD,UAAU,CAAC,EAAE,CAAC;MACdE,UAAU,CAAC,EAAE,CAAC;MACdM,cAAc,CAAC,CAAC,CAAC;MACjBE,YAAY,CAAC,CAAC,CAAC;MACfJ,YAAY,CAACgB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MACxBT,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAO0C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C,CAAC,SAAS;MACR5C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+C,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMtB,YAAY,GAAGxC,KAAK,CACvByC,MAAM,CAAC,CAACsB,IAAI,EAAEpB,KAAK,EAAEC,IAAI,KACxBD,KAAK,KAAKC,IAAI,CAACC,SAAS,CAAEmB,CAAC,IAAKA,CAAC,CAACZ,GAAG,KAAKW,IAAI,CAACX,GAAG,CACpD,CAAC;IAEH,MAAMC,UAAU,GAAGb,YAAY,CAACc,OAAO,CAAEZ,GAAG,IAAK,CAC/C;MAAE,GAAGA,GAAG;MAAEa,QAAQ,EAAEhE,MAAM,CAAC;IAAE,CAAC,EAC9B;MAAE,GAAGmD,GAAG;MAAEa,QAAQ,EAAEhE,MAAM,CAAC;IAAE,CAAC,CAC/B,CAAC;IACF,MAAMiE,QAAQ,GAAGH,UAAU,CAACI,IAAI,CAAC,MAAMlC,IAAI,CAACmC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3DzD,QAAQ,CAACuD,QAAQ,CAAC;IAClBrD,UAAU,CAAC,EAAE,CAAC;IACdE,UAAU,CAAC,EAAE,CAAC;IACdM,cAAc,CAAC,CAAC,CAAC;IACjBE,YAAY,CAAC,CAAC,CAAC;IACfJ,YAAY,CAACgB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMuC,WAAW,GAAIF,IAAI,IAAK;IAC5B,IACEzD,QAAQ,IACRJ,OAAO,CAACgE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,QAAQ,KAAKQ,IAAI,CAACR,QAAQ,CAAC,IACjDnD,OAAO,CAACgE,QAAQ,CAACL,IAAI,CAACX,GAAG,CAAC,EAE1B;IAEF,MAAMiB,UAAU,GAAG,CAAC,GAAGnE,OAAO,EAAE6D,IAAI,CAAC;IACrC5D,UAAU,CAACkE,UAAU,CAAC;IAEtB,IAAIA,UAAU,CAACzC,MAAM,KAAK,CAAC,EAAE;MAC3BrB,WAAW,CAAC,IAAI,CAAC;MACjBM,YAAY,CAAEyD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAEhC,IAAID,UAAU,CAAC,CAAC,CAAC,CAACjB,GAAG,KAAKiB,UAAU,CAAC,CAAC,CAAC,CAACjB,GAAG,EAAE;QAC3C/C,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE2D,IAAI,CAACX,GAAG,CAAC,CAAC;QAClCmB,UAAU,CAAC,MAAM;UACfpE,UAAU,CAAC,EAAE,CAAC;UACdI,WAAW,CAAC,KAAK,CAAC;QACpB,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACLgE,UAAU,CAAC,MAAM;UACfpE,UAAU,CAAC,EAAE,CAAC;UACdI,WAAW,CAAC,KAAK,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC;EAED,MAAMiE,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAGnD,IAAI,CAACC,KAAK,CAACiD,OAAO,GAAG,EAAE,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjE,MAAMC,IAAI,GAAG,CAACJ,OAAO,GAAG,EAAE,EAAEE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACvD,OAAO,GAAGF,IAAI,IAAIG,IAAI,EAAE;EAC1B,CAAC;EAED,oBACEpF,OAAA;IAAKqF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtF,OAAA;MAAAsF,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE7B,CAACnE,WAAW,gBACXvB,OAAA;MAAKqF,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBtF,OAAA;QACE2F,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzF,KAAM;QACb0F,QAAQ,EAAGC,CAAC,IAAK1F,QAAQ,CAAC0F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAc;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACF1F,OAAA;QACE2F,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEvF,QAAS;QAChBwF,QAAQ,EAAGC,CAAC,IAAKxF,WAAW,CAAC2F,MAAM,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;QACrDM,GAAG,EAAE,CAAE;QACPC,GAAG,EAAE,EAAG;QACRH,WAAW,EAAC;MAAwB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDjE,QAAQ,iBAAIzB,OAAA;QAAGoG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAf,QAAA,EAAE7D;MAAQ;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvD1F,OAAA;QAAQsG,OAAO,EAAElE,WAAY;QAACvB,QAAQ,EAAEQ,OAAO,IAAI,CAAClB,KAAM;QAAAmF,QAAA,EACvDjE,OAAO,GAAG,YAAY,GAAG;MAAe;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAEN1F,OAAA;MACEoG,KAAK,EAAE;QACLG,OAAO,EAAE,MAAM;QACfC,GAAG,EAAE,MAAM;QACXC,cAAc,EAAE,QAAQ;QACxBC,YAAY,EAAE,MAAM;QACpBC,QAAQ,EAAE;MACZ,CAAE;MAAArB,QAAA,gBAEFtF,OAAA;QACEsG,OAAO,EAAEA,CAAA,KAAM;UACb9F,QAAQ,CAAC,EAAE,CAAC;UACZJ,QAAQ,CAAC,EAAE,CAAC;UACZoB,cAAc,CAAC,KAAK,CAAC;UACrBZ,UAAU,CAAC,EAAE,CAAC;UACdF,UAAU,CAAC,EAAE,CAAC;UACdQ,cAAc,CAAC,CAAC,CAAC;UACjBE,YAAY,CAAC,CAAC,CAAC;UACfJ,YAAY,CAAC,IAAI,CAAC;QACpB,CAAE;QACFqE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT1F,OAAA;QAAQsG,OAAO,EAAEjC,uBAAwB;QAACgB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAExE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAnF,KAAK,CAAC4B,MAAM,GAAG,CAAC,iBACfnC,OAAA;MAAKqF,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBtF,OAAA;QAAKqF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtF,OAAA;UAAMqF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,YAAQ,EAAC/E,OAAO,CAACwB,MAAM;MAAA;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACN1F,OAAA;QAAKqF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtF,OAAA;UAAMqF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,YAAQ,EAACvE,SAAS;MAAA;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN1F,OAAA;QAAKqF,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtF,OAAA;UAAMqF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,YAAQ,EAACX,UAAU,CAAC9D,WAAW,CAAC;MAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAED1F,OAAA;MAAKqF,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClB/E,KAAK,CAACkD,GAAG,CAAEa,IAAI,IAAK;QACnB,MAAMsC,SAAS,GACbnG,OAAO,CAACgE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,QAAQ,KAAKQ,IAAI,CAACR,QAAQ,CAAC,IAAInD,OAAO,CAACgE,QAAQ,CAACL,IAAI,CAACX,GAAG,CAAC;QACjF,oBACE3D,OAAA;UAAyBqF,SAAS,EAAC,MAAM;UAACiB,OAAO,EAAEA,CAAA,KAAM9B,WAAW,CAACF,IAAI,CAAE;UAAAgB,QAAA,eACzEtF,OAAA;YAAKqF,SAAS,EAAE,cAAcuB,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;YAAAtB,QAAA,gBACzDtF,OAAA;cAAKqF,SAAS,EAAC,YAAY;cAAAC,QAAA,eACzBtF,OAAA;gBAAK2D,GAAG,EAAC,gBAAgB;gBAACkD,GAAG,EAAC;cAAM;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,eACN1F,OAAA;cAAKqF,SAAS,EAAC,WAAW;cAAAC,QAAA,eACxBtF,OAAA;gBAAK2D,GAAG,EAAEW,IAAI,CAACX,GAAI;gBAACkD,GAAG,EAAC;cAAM;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAREpB,IAAI,CAACR,QAAQ;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASlB,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL/E,OAAO,CAACwB,MAAM,KAAK5B,KAAK,CAAC4B,MAAM,GAAG,CAAC,IAAI5B,KAAK,CAAC4B,MAAM,GAAG,CAAC,iBACtDnC,OAAA;MAAKqF,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,+BACR,EAACjF,QAAQ,EAAC,YAAU,EAAC0E,UAAU,CAAC9D,WAAW,CAAC,EAAC,QAAM,EAACE,SAAS,EAAC,SACnF;IAAA;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxF,EAAA,CA7OQD,GAAG;AAAA6G,EAAA,GAAH7G,GAAG;AA+OZ,eAAeA,GAAG;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}